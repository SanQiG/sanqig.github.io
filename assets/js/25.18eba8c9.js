(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{381:function(e,r,t){"use strict";t.r(r);var o=t(44),s=Object(o.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"前端总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端总结"}},[e._v("#")]),e._v(" 前端总结")]),e._v(" "),t("h2",{attrs:{id:"cors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[e._v("#")]),e._v(" CORS")]),e._v(" "),t("h3",{attrs:{id:"access-control-allow-credentials"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#access-control-allow-credentials"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials",target:"_blank",rel:"noopener noreferrer"}},[e._v("Access-Control-Allow-Credentials"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("code",[e._v("Access-Control-Allow-Credentials")]),e._v(" 响应头用于在请求要求包含 credentials 时，告知浏览器是否可以将对请求的响应暴露给前端 JS 代码。")]),e._v(" "),t("p",[e._v("当请求的 credentials 模式为 include 时，浏览器仅在响应标头 "),t("code",[e._v("Access-Control-Allow-Credentials")]),e._v(" 的值为 true 的情况下将响应暴露给前端的 JS 代码。")]),e._v(" "),t("p",[e._v("Credentials 可以是 cookies、authorization headers 或 TLS client certificates。")]),e._v(" "),t("p",[e._v("当作为预检请求的响应的一部分时，这能表示是否真正的请求可以使用 credentials。"),t("strong",[e._v("注意简单的 GET 请求没有预检，所以若一个对资源的请求代理 credentials，如果这个响应头没有随资源返回，响应就会被浏览器忽视，不会返回到 web 内容。")])]),e._v(" "),t("p",[t("code",[e._v("Access-Control-Allow-Credentials")]),e._v(" 标头需要与 "),t("code",[e._v("XMLHttpRequest.withCredentials")]),e._v(" 或 Fetch API 的 "),t("code",[e._v("Request()")]),e._v(" 构造函数中的 "),t("code",[e._v("credentials")]),e._v(" 选项结合使用。Credentials 必须在前后端都被配置（即 "),t("code",[e._v("Access-Control-Allow-Credentials")]),e._v(" header 和 XHR 或 Fetch requeset 中都要配置）才能使带 credentials 的 CORS 请求成功。")]),e._v(" "),t("h4",{attrs:{id:"tips"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tips"}},[e._v("#")]),e._v(" tips")]),e._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"https://maomao.ink/index.php/IT/1587.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("🔗"),t("OutboundLink")],1),e._v(" 如果服务器端开启了 Access-Control-Allow-Credentials 为 true，假设服务器端设置了 Access-Control-Allow-Origin 为 *，意味着将 cookie 开放给了所有网站。如果服务端设置了 "),t("code",[e._v('"Access-Control-Allow-Origin": "*"')]),e._v("，客户端请求时无需再设置 "),t("code",[e._v("withCredentials: true")]),e._v("。")])]),e._v(" "),t("h3",{attrs:{id:"script-标签的-crossorigin-属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#script-标签的-crossorigin-属性"}},[e._v("#")]),e._v(" "),t("a",{attrs:{href:"https://juejin.cn/post/6969825311361859598",target:"_blank",rel:"noopener noreferrer"}},[e._v("script 标签的 crossorigin 属性"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"script-标签请求资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#script-标签请求资源"}},[e._v("#")]),e._v(" script 标签请求资源")]),e._v(" "),t("ol",[t("li",[e._v("script 标签请求资源的时候，request 是没有 origin 头的。")]),e._v(" "),t("li",[e._v("script 标签请求跨域资源的时候，内部运行如果报错的话，"),t("code",[e._v("window.onerror")]),e._v(" 捕获的时候，内部的 "),t("code",[e._v("error.message")]),e._v(" 只能看到 "),t("code",[e._v("Script error")]),e._v("，看不到完整的错误内容。")])]),e._v(" "),t("h4",{attrs:{id:"script-标签-crossorigin-属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#script-标签-crossorigin-属性"}},[e._v("#")]),e._v(" script 标签 crossorigin 属性")]),e._v(" "),t("ol",[t("li",[e._v("设置 "),t("code",[e._v("crossorigin")]),e._v(" 属性后，"),t("code",[e._v("script")]),e._v(" 标签去请求资源的时候，request 会带上 origin 头，然后会要求服务器进行 cors 校验，跨域的时候如果 response header 没有 "),t("code",[e._v("Access-Control-Allow-Origin")]),e._v(" 是不会拿到资源的。cors 验证通过后，拿到的 script 运行内部报错的话，"),t("code",[e._v("window.onerror")]),e._v(" 捕获的时候，内部的 "),t("code",[e._v("error.message")]),e._v(" 可以看到完整的错误信息。")]),e._v(" "),t("li",[t("code",[e._v("crossorigin")]),e._v(" 的属性值分为 "),t("code",[e._v("anonymous")]),e._v(" 和 "),t("code",[e._v("use-credentials")]),e._v("。如果设置了 "),t("code",[e._v("crossorigin")]),e._v(" 属性，但是属性值不正确的话，默认是 "),t("code",[e._v("anonymous")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("anonymous")]),e._v(" 代表同域会带上 cookie，跨域则不带上 cookie，相当于 fetch 请求的 "),t("code",[e._v("credentials: 'same-origin'")]),e._v("。")]),e._v(" "),t("li",[t("code",[e._v("use-credentials")]),e._v(" 跨域也会带上 cookie，相当于 fetch 请求的 "),t("code",[e._v("credentials: 'include'")]),e._v("，这种情况下跨域的 response header 需要设置 "),t("code",[e._v("'Access-Control-Allow-Credentials' = true")]),e._v("，否则 cors 失败。")])]),e._v(" "),t("h4",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("ol",[t("li",[e._v("设置了 "),t("code",[e._v("crossorigin")]),e._v(" 属性就相当于开启了 cors 校验。")]),e._v(" "),t("li",[e._v("开启 cors 校验之后，跨域的 script 资源在运行出错的时候，"),t("code",[e._v("window.onerror")]),e._v(" 可以捕获到完整的错误信息。")]),e._v(" "),t("li",[t("code",[e._v("crossorigin=use-credentials")]),e._v(" 可以跨域带上 cookie。")])]),e._v(" "),t("h2",{attrs:{id:"git-commit-、changelog-的标准自动化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-、changelog-的标准自动化"}},[e._v("#")]),e._v(" git commit 、CHANGELOG 的标准自动化")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://juejin.cn/post/6844904147892830221",target:"_blank",rel:"noopener noreferrer"}},[e._v("git自动生成changelog及项目版本管理"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://www.jianshu.com/p/8564d1281366",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用标准commit生成changelog标准化"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/391709116",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Commit Message校验踩坑指南"),t("OutboundLink")],1),e._v(" "),t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/51894196",target:"_blank",rel:"noopener noreferrer"}},[e._v("git commit 、CHANGELOG 的标准自动化"),t("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=s.exports}}]);