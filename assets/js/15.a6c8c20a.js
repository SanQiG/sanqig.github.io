(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{372:function(t,a,s){"use strict";s.r(a);var v=s(44),r=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM")]),t._v(" "),s("h2",{attrs:{id:"window-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-对象"}},[t._v("#")]),t._v(" Window 对象")]),t._v(" "),s("h2",{attrs:{id:"location-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location-对象"}},[t._v("#")]),t._v(" Location 对象")]),t._v(" "),s("p",[t._v("Location接口表示其链接到的对象的位置（URL）。所做的修改反映在与之相关的对象上。"),s("code",[t._v("document")]),t._v("和"),s("code",[t._v("window")]),t._v("接口都有这样一个链接的Location，分别通过"),s("code",[t._v("document.location")]),t._v("和"),s("code",[t._v("window.location")]),t._v("访问（引用的是同一个对象）。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性名")]),t._v(" "),s("th",[t._v("例子")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("hash")]),t._v(" "),s("td",[t._v('"#contents"')]),t._v(" "),s("td",[t._v("返回URL中的hash（#后跟零或多个字符）")])]),t._v(" "),s("tr",[s("td",[t._v("host")]),t._v(" "),s("td",[t._v('"www.wrox.com:80"')]),t._v(" "),s("td",[t._v("返回服务器名称和端口号（如果有）")])]),t._v(" "),s("tr",[s("td",[t._v("hostname")]),t._v(" "),s("td",[t._v('"www.wrox.com"')]),t._v(" "),s("td",[t._v("返回不带端口号的服务器名称")])]),t._v(" "),s("tr",[s("td",[t._v("href")]),t._v(" "),s("td",[t._v('"https:/www.wrox.com"')]),t._v(" "),s("td",[t._v("返回当前加载页面的完整URL")])]),t._v(" "),s("tr",[s("td",[t._v("pathname")]),t._v(" "),s("td",[t._v('"/WileyCDA/"')]),t._v(" "),s("td",[t._v("返回URL中的目录和（或）文件名")])]),t._v(" "),s("tr",[s("td",[t._v("port")]),t._v(" "),s("td",[t._v('"8080"')]),t._v(" "),s("td",[t._v("返回URL中指定的端口号（如果有）")])]),t._v(" "),s("tr",[s("td",[t._v("protocol")]),t._v(" "),s("td",[t._v('"https:"')]),t._v(" "),s("td",[t._v("返回页面使用的协议")])]),t._v(" "),s("tr",[s("td",[t._v("search")]),t._v(" "),s("td",[t._v('"?q=javascript')]),t._v(" "),s("td",[t._v("返回URL的查询字符串（以?开头）")])])])]),t._v(" "),s("p",[t._v("每次修改location的属性（hash除外），页面都会以新URL重新加载。")]),t._v(" "),s("h3",{attrs:{id:"location-assign"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location-assign"}},[t._v("#")]),t._v(" location.assign()")]),t._v(" "),s("p",[s("code",[t._v("location.assign(url)")]),t._v("方法会触发窗口加载并显示指定的URL的内容。")]),t._v(" "),s("h3",{attrs:{id:"location-replace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location-replace"}},[t._v("#")]),t._v(" location.replace()")]),t._v(" "),s("p",[s("code",[t._v("location.replace(url)")]),t._v("方法以给定的URL来替换当前的资源。与"),s("code",[t._v("assign()")]),t._v("方法不同的是调用"),s("code",[t._v("replace()")]),t._v("方法后，当前页面不会保存到会话历史中，这样用户点击回退按钮将不会再跳转到该页面。")]),t._v(" "),s("h3",{attrs:{id:"location-reload"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#location-reload"}},[t._v("#")]),t._v(" location.reload()")]),t._v(" "),s("p",[s("code",[t._v("location.reload([forcedReload])")]),t._v("方法用来刷新当前页面。该方法只有一个可选参数，当值为"),s("code",[t._v("true")]),t._v("时，将强制浏览器从服务器加载页面资源，否则当值为"),s("code",[t._v("false")]),t._v("或者未传参时，浏览器则可能从缓存中读取页面。")]),t._v(" "),s("h2",{attrs:{id:"history-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-对象"}},[t._v("#")]),t._v(" History 对象")]),t._v(" "),s("p",[t._v("History接口允许操作浏览器的曾经在标签页或者框架里访问的会话历史记录。"),s("code",[t._v("window.history")]),t._v("是一个只读属性，用来获取History对象的引用。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("history.length")]),t._v(" "),s("td",[t._v("表示会话历史中元素的数目，包括当前加载的页")])]),t._v(" "),s("tr",[s("td",[t._v("history.scrollRestoration")]),t._v(" "),s("td",[t._v("允许web应用程序在历史导航上显式地设置默认滚动恢复行为，此属性可以是自动的（auto）或者手动的（manual）")])]),t._v(" "),s("tr",[s("td",[t._v("history.state")]),t._v(" "),s("td",[t._v("返回一个表示历史堆栈顶部地状态的值")])])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法名")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("history.back()")]),t._v(" "),s("td",[t._v("前往上一页，等价于"),s("code",[t._v("history.go(-1)")])])]),t._v(" "),s("tr",[s("td",[t._v("history.forward()")]),t._v(" "),s("td",[t._v("前往下一页，等价于"),s("code",[t._v("history.go(1)")])])]),t._v(" "),s("tr",[s("td",[t._v("history.go()")]),t._v(" "),s("td",[t._v("通过当前页面的相对位置从浏览器历史记录加载页面")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("history.pushState()")])]),t._v(" "),s("td",[t._v("按指定的名称和URL将数据push进会话历史栈")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("history.replaceState()")])]),t._v(" "),s("td",[t._v("按指定的数据，名称和URL，更新历史栈上最新的入口")])])])]),t._v(" "),s("h3",{attrs:{id:"history-pushstate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-pushstate"}},[t._v("#")]),t._v(" history.pushState()")]),t._v(" "),s("p",[t._v("执行"),s("code",[t._v("pushState")]),t._v("函数之后，会往浏览器的历史记录中添加一条新记录，同时改变地址栏的地址内容。它可以接收三个参数，按顺序分别为：")]),t._v(" "),s("ol",[s("li",[t._v("状态对象——一个对象或者字符串，用于描述新记录的一些特性。这个参数会被一并添加到历史记录中，以供以后使用。这个参数是开发者根据自己的需要自由给出的。无论什么时候用户导航到新的状态，popstate事件就会被触发，且该事件的state属性包含该历史条目状态对象的副本。")]),t._v(" "),s("li",[t._v("标题——一个字符串，目前这个参数被忽略，但未来可能会用到。传递一个空字符串在这里是安全的，而在将来这是不安全的。二选一的话，你可以为跳转的state传递一个短标题。")]),t._v(" "),s("li",[t._v("URL——一个字符串，该参数定义了新的历史URL记录。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tid"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'profile'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwindow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("history"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Profile"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/profile/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("当用户点击浏览器的「前进」、「后退」按钮时，就会触发"),s("code",[t._v("popstate")]),t._v("事件。你可以监听这一事件，从而作出反应。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"popstate"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这里的"),s("code",[t._v("e.state")]),t._v("就是当初"),s("code",[t._v("pushState")]),t._v("时传入的第一个参数。")]),t._v(" "),s("h3",{attrs:{id:"history-replacestate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history-replacestate"}},[t._v("#")]),t._v(" history.replaceState()")]),t._v(" "),s("p",[s("code",[t._v("history.replaceState()")]),t._v(" 的使用与 "),s("code",[t._v("history.pushState()")]),t._v(" 非常相似，区别在于 "),s("code",[t._v("replaceState()")]),t._v("是修改了当前的历史记录项而不是新建一个。")]),t._v(" "),s("h2",{attrs:{id:"navigator-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#navigator-对象"}},[t._v("#")]),t._v(" Navigator 对象")]),t._v(" "),s("h2",{attrs:{id:"screen-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#screen-对象"}},[t._v("#")]),t._v(" Screen 对象")])])}),[],!1,null,null,null);a.default=r.exports}}]);