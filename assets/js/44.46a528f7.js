(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{400:function(e,t,o){"use strict";o.r(t);var s=o(44),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"一、缓存"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#一、缓存"}},[e._v("#")]),e._v(" 一、缓存")]),e._v(" "),o("blockquote",[o("p",[e._v("参考了"),o("a",{attrs:{href:"https://github.com/amandakelake/blog/issues/43",target:"_blank",rel:"noopener noreferrer"}},[e._v("这篇文章"),o("OutboundLink")],1)])]),e._v(" "),o("h2",{attrs:{id:"缓存的分类"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#缓存的分类"}},[e._v("#")]),e._v(" 缓存的分类？")]),e._v(" "),o("p",[o("img",{attrs:{src:"https://user-images.githubusercontent.com/25027560/38461517-c7f2f422-3b04-11e8-8e94-20bbeb2a32b8.png",alt:"缓存分类"}})]),e._v(" "),o("blockquote",[o("p",[e._v("注：文章只讨论浏览器（客户端）缓存喔")])]),e._v(" "),o("h2",{attrs:{id:"缓存的一些应用场景"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#缓存的一些应用场景"}},[e._v("#")]),e._v(" 缓存的一些应用场景？")]),e._v(" "),o("ol",[o("li",[o("p",[e._v("每次都加载某个同样的静态文件 => 浪费带宽，重复请求 => "),o("strong",[e._v("让浏览器使用本地缓存（协商缓存，返回304）")])])]),e._v(" "),o("li",[o("p",[e._v("协商缓存还是要和服务器通信 => "),o("strong",[e._v("强制浏览器使用本地强缓存（返回200）")])])]),e._v(" "),o("li",[o("p",[e._v("缓存要更新，没有网络请求，怎么知道什么时候更新？ => "),o("strong",[e._v("让请求加上(header加上ETag)或者url的修改与文件内容关联（文件名加哈希值）")])]),e._v(" "),o("blockquote",[o("p",[e._v("!!! 这个我有次面试被问到了了，然后一脸懵逼的说了不会...")])])])]),e._v(" "),o("hr"),e._v(" "),o("h1",{attrs:{id:"二、浏览器的缓存机制-强缓存、协商缓存"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#二、浏览器的缓存机制-强缓存、协商缓存"}},[e._v("#")]),e._v(" 二、浏览器的缓存机制：强缓存、协商缓存")]),e._v(" "),o("blockquote",[o("p",[e._v("话不多述，先上流程图 : )")])]),e._v(" "),o("p",[o("img",{attrs:{src:"https://user-images.githubusercontent.com/25027560/38223505-d8ab53da-371d-11e8-9263-79814b6971a5.png",alt:""}})]),e._v(" "),o("h2",{attrs:{id:"概述"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),o("p",[o("strong",[e._v("1. 基本原理")])]),e._v(" "),o("ul",[o("li",[e._v("浏览器在加载资源时，根据请求头的"),o("code",[e._v("Expires")]),e._v("和"),o("code",[e._v("Cache-Control")]),e._v("判断是否命中"),o("strong",[e._v("强缓存")]),e._v("，是则直接从缓存读取资源，不会发送请求到服务器。")]),e._v(" "),o("li",[e._v("如果没有命中强缓存，浏览器一定会发送一个请求到服务器，通过"),o("code",[e._v("Last-Modified")]),e._v("和"),o("code",[e._v("ETag")]),e._v("验证资源是否命中"),o("strong",[e._v("协商缓存")]),e._v("，如果命中，服务器会将这个请求返回，但是不会返回这个资源的数据，依然是从缓存中读取资源")]),e._v(" "),o("li",[e._v("如果前两者都没有命中，直接从服务器加载资源")])]),e._v(" "),o("p",[o("strong",[e._v("2. 相同点")])]),e._v(" "),o("p",[e._v("​\t如果命中，都是从客户端缓存中加载资源，而不是从服务器加载资源数据")]),e._v(" "),o("p",[o("strong",[e._v("3. 不同点")])]),e._v(" "),o("p",[e._v("​\t强缓存不发请求到服务器，协商缓存会发送请求到服务器")]),e._v(" "),o("h2",{attrs:{id:"强缓存"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[e._v("#")]),e._v(" 强缓存")]),e._v(" "),o("p",[e._v("强缓存通过"),o("code",[e._v("Expires")]),e._v("和"),o("code",[e._v("Cache-Control")]),e._v("两种响应头实现")]),e._v(" "),o("ol",[o("li",[o("p",[o("strong",[o("code",[e._v("Expires")])]),e._v(" "),o("code",[e._v("Expires")]),e._v("是HTTP 1.0提出的一个表示资源过期时间的头部，它描述的是一个绝对的时间，由服务器返回。"),o("code",[e._v("Expires")]),e._v("受限于本地时间，如果修改了本地时间，可能会导致缓存失效。")]),e._v(" "),o("p",[o("code",[e._v("Expires: Sat, Mar 16 2019 20:26:43 GMT")])])]),e._v(" "),o("li",[o("p",[o("strong",[o("code",[e._v("Cache-Control")])]),e._v(" "),o("code",[e._v("Cache-Control")]),e._v("出现于HTTP 1.1，"),o("strong",[e._v("优先级高于"),o("code",[e._v("Expires")])]),e._v("，表示的是相对时间。")]),e._v(" "),o("p",[o("code",[e._v("Cache-Control: max-age=315360000")])])])]),e._v(" "),o("blockquote",[o("p",[e._v("原作者在这里顺带提及了Cache-Control指令的细节")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("Cache-Control: no-cache")]),e._v(" 不会缓存数据到本地的说法是错误的（下图是《HTTP权威指南》p182内容）\n"),o("img",{attrs:{src:"https://user-images.githubusercontent.com/25027560/38223488-c2bf4b76-371d-11e8-85ac-45fc8ed04dd4.png",alt:""}})]),e._v(" "),o("li",[o("code",[e._v("Cache-Control: no-store")]),e._v(" 真正的不缓存数据到本地")]),e._v(" "),o("li",[o("code",[e._v("Cache-Control: public")]),e._v(" 可以被所有用户缓存（多用户共享），包括终端和CDN等中间代理服务器")]),e._v(" "),o("li",[o("code",[e._v("Cache-Control: private")]),e._v(" 只能被终端浏览器缓存（而且是私有缓存），不允许中继缓存服务器进行缓存\n"),o("img",{attrs:{src:"https://user-images.githubusercontent.com/25027560/38223493-c7ec919e-371d-11e8-8d72-8c6b0e4935a8.png",alt:""}})])]),e._v(" "),o("h2",{attrs:{id:"协商缓存"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[e._v("#")]),e._v(" 协商缓存")]),e._v(" "),o("p",[e._v("当浏览器对某个资源没有命中强缓存，就会发一个请求到服务器，验证协商缓存是否命中，如果协商缓存命中，请求响应返回的HTTP状态为"),o("strong",[e._v("304 Not Modified")]),e._v("。")]),e._v(" "),o("p",[e._v("协商缓存利用的是"),o("code",[e._v("【Last-Modified, If-Modified-Since】")]),e._v("和"),o("code",[e._v("【ETag, If-None-Match】")]),e._v("这两对Header来管理。")]),e._v(" "),o("ol",[o("li",[o("p",[o("strong",[o("code",[e._v("Last-Modified, If-Modified-Since")])]),e._v(" "),o("code",[e._v("Last-Modified")]),e._v("表示本地文件最后修改日期，浏览器会在request header加上"),o("code",[e._v("If-Modified-Since")]),e._v("（上次返回的"),o("code",[e._v("Last-Modified")]),e._v("的值），询问服务器在该日期后资源是否有更新，有更新的话就会将新的资源发送回来。\n但是如果在本地打开缓存文件，就会造成"),o("code",[e._v("Last-Modified")]),e._v("被修改，所以HTTP 1.1 出现了"),o("code",[e._v("ETag")]),e._v("。")])]),e._v(" "),o("li",[o("p",[o("strong",[o("code",[e._v("ETag, If-None-Match")])]),e._v(" "),o("code",[e._v("ETag")]),e._v("就像一个指纹，资源变化都会导致"),o("code",[e._v("ETag")]),e._v("变化，跟最后修改时间没关系，"),o("code",[e._v("ETag")]),e._v("可以保证每一个资源是唯一的。\n"),o("code",[e._v("If-None-Match")]),e._v("的Header会将上次的"),o("code",[e._v("ETag")]),e._v("发送给服务器，询问该资源的"),o("code",[e._v("ETag")]),e._v("是否有更新，有变动就会发送新的资源回来。")]),e._v(" "),o("blockquote",[o("p",[e._v("下面这张图很形象地描述了这个过程")])]),e._v(" "),o("p",[o("img",{attrs:{src:"https://user-images.githubusercontent.com/25027560/38223495-d02aec3e-371d-11e8-92ae-fe7c729ab6e5.png",alt:""}}),e._v(" "),o("strong",[o("code",[e._v("ETag")]),e._v("的优先级比"),o("code",[e._v("Last-Modified")]),e._v("更高")]),e._v("\n那么为什么要使用"),o("code",[e._v("ETag")]),e._v("呢？")]),e._v(" "),o("ul",[o("li",[e._v("一些文件也许会周期性的更改，但是他的内容并不改变（仅仅改变了修改时间），这时我们并不希望客户端认为这个文件被修改而重新GET；")]),e._v(" "),o("li",[e._v("某些文件修改是非常频繁的，比如在秒以下的时间内进行修改（例如1s内修改了N次），"),o("code",[e._v("If-Modified-Since")]),e._v("能检查到的粒度是s级的，这种修改无法判断；")]),e._v(" "),o("li",[e._v("某些服务器不能精确的得到文件的最后修改时间。")])])])]),e._v(" "),o("h2",{attrs:{id:"几种状态码的区别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#几种状态码的区别"}},[e._v("#")]),e._v(" 几种状态码的区别")]),e._v(" "),o("ul",[o("li",[o("p",[o("code",[e._v("200")]),e._v("：强缓存"),o("code",[e._v("Expires/Cache-Control")]),e._v("失效时，返回新的资源文件")]),e._v(" "),o("blockquote",[o("p",[e._v("其实我觉得这里应该是强缓存和协商缓存都没有命中才会返回状态码200")])])]),e._v(" "),o("li",[o("p",[o("code",[e._v("200(from disk cache)/200(from memory cache)")]),e._v("：强缓存"),o("code",[e._v("Expires/Cache-Control")]),e._v("两者都存在，未过期，"),o("code",[e._v("Cache-Control")]),e._v("优先"),o("code",[e._v("Expires")]),e._v("时，浏览器从本地获取资源成功")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("304(Not Modified)")]),e._v("：协商缓存"),o("code",[e._v("Last-Modified/ETag")]),e._v("没有过期时，服务器端返回状态码304")])])]),e._v(" "),o("p",[o("strong",[o("code",[e._v("from memory cache")]),e._v("和"),o("code",[e._v("from disk cache")]),e._v("的区别")])]),e._v(" "),o("p",[o("code",[e._v("from memory cache")]),e._v("：资源是直接从内存中拿到的，不会请求服务器，一般已经加载过该资源切换存在了内存当中，当关闭该页面时，此资源就被内存释放掉了，再次重新打开相同页面时不会出现"),o("code",[e._v("from memory cache")]),e._v("的情况")]),e._v(" "),o("p",[o("code",[e._v("from disk cache")]),e._v("：同上类似，此资源是从磁盘当中取出的，也是在已经在之前的某个时间加载过该资源，不会请求服务器但是此资源不会随着该页面的关闭而释放掉，因为是存在硬盘当中的，下次打开仍会"),o("code",[e._v("from disk cache")])]),e._v(" "),o("hr"),e._v(" "),o("h1",{attrs:{id:"三、数据存储-cookie、storage、indexeddb"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#三、数据存储-cookie、storage、indexeddb"}},[e._v("#")]),e._v(" 三、数据存储：cookie、Storage、indexedDB")]),e._v(" "),o("h2",{attrs:{id:"简单对比"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#简单对比"}},[e._v("#")]),e._v(" 简单对比")]),e._v(" "),o("ol",[o("li",[o("code",[e._v("cookie")]),e._v("：4K，可以手动设置失效期")]),e._v(" "),o("li",[o("code",[e._v("localStorage")]),e._v("：5M，除非手动清除，否则一直存在")]),e._v(" "),o("li",[o("code",[e._v("sessionStorage")]),e._v("：5M，不可以跨标签访问，页面关闭就清理")]),e._v(" "),o("li",[o("code",[e._v("indexedDB")]),e._v("：浏览器端数据库，无限容量，除非手动清除，否则一直存在")])]),e._v(" "),o("h2",{attrs:{id:"cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[e._v("#")]),e._v(" cookie")]),e._v(" "),o("blockquote",[o("p",[e._v("cookie通过在客户端记录信息确定用户身份")]),e._v(" "),o("p",[e._v("session通过在服务器端记录信息确定用户身份")])]),e._v(" "),o("p",[o("strong",[e._v("1. cookie机制")])]),e._v(" "),o("p",[e._v("一个用户的所有请求操作都应该属于同一个会话，而另一个用户的所有请求操作则应该属于另一个会话。")]),e._v(" "),o("p",[e._v("HTTP协议是无状态的协议。一旦数据交换完毕，客户端与服务器端的连接就会关闭，再次交换数据需要建立新的连接。这就意味着服务器无法从连接上跟踪会话。")]),e._v(" "),o("p",[e._v("cookie实际上是一小段的文本信息。客户端请求服务器，如果服务器需要记录该用户状态，就使用response向客户端浏览器颁发一个cookie。客户端会把cookie保存起来。当浏览器再请求该网站时，浏览器把请求的网址连同该cookie一同提交给服务器。服务器检查该cookie，以此来辨认用户状态。服务器还可以根据需要修改cookie的内容。")]),e._v(" "),o("p",[e._v("cookie的内容主要包括：名字、值、过期时间、路径和域。路径和域一起构成cookie的作用范围。")]),e._v(" "),o("hr"),e._v(" "),o("p",[o("strong",[e._v("2. session机制")])]),e._v(" "),o("p",[e._v("session是另一种记录客户状态的机制，不同的是cookie保存在客户端浏览器中，而session保存在服务器上。")]),e._v(" "),o("p",[e._v("客户端浏览器访问服务器的时候，服务器把客户端信息以某种形式记录在服务器上，这就是session。客户端浏览器再次访问时只需要从该session中查找该客户的状态就可以了。")]),e._v(" "),o("p",[o("strong",[e._v("如果说cookie机制是通过检查客户身上的“通行证”来确定客户身份的话，那么session机制就是通过检查服务器上的“客户明细表”来确认客户身份")]),e._v("。session相当于程序在服务器上建立的一份客户档案，客户来访的时候只需要查询客户档案表就可以了。")]),e._v(" "),o("p",[e._v("当程序需要为某个客户端的请求创建一个session时，")]),e._v(" "),o("ul",[o("li",[e._v("服务器首先检查这个客户端的请求里是否包含了一个session标识——称为session id")]),e._v(" "),o("li",[e._v("如果已包含则说明以前已经为此客户端创建过session，服务器按照session id把这个session检索出来使用（检索不到，会新建一个）")]),e._v(" "),o("li",[e._v("如果客户端请求不包含session id，则为此客户端创建一个session并生成一个与此session相关联的session id，session id的值应该是一个既不会重复，又不容易被找到规律以仿造的字符串，这个session id将会在本次响应中被返回给客户端保存")])]),e._v(" "),o("hr"),e._v(" "),o("p",[e._v("可以用"),o("code",[e._v("document.cookie")]),e._v("获取cookie，得到一个字符串，形式如"),o("code",[e._v("key1=value1; key2=value2")]),e._v("，需要用正则匹配需要的值。")]),e._v(" "),o("p",[e._v("cookie可以设置路径path，所以它要比另外两个多了一层访问限制\ncookie可以通过设置domain属性值，可以不同二级域名下共享cookie，而Storage不可以，比如"),o("code",[e._v("http://image.baidu.com")]),e._v("的cookie"),o("code",[e._v("http://map.baidu.com")]),e._v("是可以访问的，前提是cookie的domain设置为"),o("code",[e._v(".http://baidu.com")]),e._v("，而Storage不可以")]),e._v(" "),o("p",[o("strong",[e._v("缺点")]),e._v("：在请求头带着数据，大小是4K之内，主domain污染。")]),e._v(" "),o("p",[e._v("常用的配置属性有以下几个：")]),e._v(" "),o("p",[o("strong",[o("code",[e._v("Expires")])]),e._v("：cookie最长有效期")]),e._v(" "),o("p",[o("strong",[o("code",[e._v("Max-Age")])]),e._v("：在cookie失效之前需要经过的秒数。(当"),o("code",[e._v("Expires")]),e._v("和"),o("code",[e._v("Max-Age")]),e._v("同时存在时，文档中给出的是以"),o("code",[e._v("Max-Age")]),e._v("为准，但是作者在Chrome中实验的结果是取二者中最长有效期的值)")]),e._v(" "),o("p",[o("strong",[o("code",[e._v("Domain")])]),e._v("：指定cookie可以送达的主机名")]),e._v(" "),o("p",[o("strong",[o("code",[e._v("Path")])]),e._v("：指定一个URL路径，这个路径必须出现在要请求的资源的路径中才可以发送cookie首部")]),e._v(" "),o("p",[o("strong",[o("code",[e._v("Secure")])]),e._v("：一个带有安全属性的cookie只有在请求使用SSL和HTTPS协议的时候才会被发送到服务器")]),e._v(" "),o("p",[o("strong",[o("code",[e._v("HttpOnly")])]),e._v("：设置了 "),o("code",[e._v("HttpOnly")]),e._v(" 属性的cookie不能使用JavaScript经由"),o("code",[e._v("document.cookie")]),e._v("属性、XMLHttpRequest"),o("code",[e._v("和")]),e._v("Request APIs` 进行访问，以防范跨站脚本攻击（XSS）")]),e._v(" "),o("h2",{attrs:{id:"storage-localstorage、sessionstorage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#storage-localstorage、sessionstorage"}},[e._v("#")]),e._v(" Storage：localStorage、sessionStorage")]),e._v(" "),o("p",[o("strong",[e._v("大小")]),e._v("：官方建议是5M存储空间")]),e._v(" "),o("p",[o("strong",[e._v("类型")]),e._v("：只能操作字符串，在存储之前应该使用"),o("code",[e._v("JSON.stringify()")]),e._v("方法先进行一步安全转换字符串，取值时再用"),o("code",[e._v("JSON.parse()")]),e._v("方法再转换一次")]),e._v(" "),o("p",[o("strong",[e._v("存储的内容")]),e._v("：数组，图片，json，样式，脚本等（只要是能序列化成字符串的内容都可以存储）")]),e._v(" "),o("p",[o("strong",[e._v("注意")]),e._v("：数据是"),o("strong",[e._v("明文存储")]),e._v("，毫无隐私性可言，"),o("strong",[e._v("绝对不能用于存储重要信息")])]),e._v(" "),o("p",[o("strong",[e._v("区别")]),e._v("：sessionStorage将数据临时存储在session中，浏览器关闭，数据随之消失，localStorage将数据存储在本地，理论上来说数据永远不会消失，除非人为删除")]),e._v(" "),o("p",[e._v("另外，不同浏览器无法共享localStorage和sessionStorage中的信息。同一浏览器的相同域名和端口的不同页面间可以共享相同的localStorage，但是不同页面间无法共享sessionStorage的信息。")]),e._v(" "),o("p",[o("strong",[e._v("1. 基础操作API")])]),e._v(" "),o("p",[o("strong",[e._v("保存数据")])]),e._v(" "),o("p",[o("code",[e._v("lcoalStorage.setItem(key, value);")]),e._v(" "),o("code",[e._v("sessionStorage.setItem(key, value);")])]),e._v(" "),o("p",[o("strong",[e._v("读取数据")])]),e._v(" "),o("p",[o("code",[e._v("lcoalStorage.getItem(key);")]),e._v(" "),o("code",[e._v("sessionStorage.getItem(key);")])]),e._v(" "),o("p",[o("strong",[e._v("删除单个数据")])]),e._v(" "),o("p",[o("code",[e._v("lcoalStorage.removeItem(key);")]),e._v(" "),o("code",[e._v("sessionStorage.removeItem(key);")])]),e._v(" "),o("p",[o("strong",[e._v("删除全部数据")])]),e._v(" "),o("p",[o("code",[e._v("lcoalStorage.clear();")]),e._v(" "),o("code",[e._v("sessionStorage.clear();")])]),e._v(" "),o("p",[o("strong",[e._v("获取索引的key")])]),e._v(" "),o("p",[o("code",[e._v("lcoalStorage.key(index);")]),e._v(" "),o("code",[e._v("sessionStorage.key(index);")])]),e._v(" "),o("p",[o("strong",[e._v("2. 监听storage事件")])]),e._v(" "),o("p",[e._v("可以通过监听window对象的storage事件并指定其事件处理函数，当页面中对 localStorage 或 sessionStorage 进行修改时，则会触发对应的处理函数")]),e._v(" "),o("div",{staticClass:"language-javascript extra-class"},[o("pre",{pre:!0,attrs:{class:"language-javascript"}},[o("code",[e._v("window"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),o("span",{pre:!0,attrs:{class:"token function"}},[e._v("addEventListener")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),o("span",{pre:!0,attrs:{class:"token string"}},[e._v("'storage'")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),o("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("e")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    console"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),o("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),o("span",{pre:!0,attrs:{class:"token template-string"}},[o("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[e._v("`")]),o("span",{pre:!0,attrs:{class:"token string"}},[e._v("key=")]),o("span",{pre:!0,attrs:{class:"token interpolation"}},[o("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[e._v("${")]),e._v("e"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("key"),o("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[e._v("}")])]),o("span",{pre:!0,attrs:{class:"token string"}},[e._v(", oldValue=")]),o("span",{pre:!0,attrs:{class:"token interpolation"}},[o("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[e._v("${")]),e._v("e"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("oldValue"),o("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[e._v("}")])]),o("span",{pre:!0,attrs:{class:"token string"}},[e._v(", newValue=")]),o("span",{pre:!0,attrs:{class:"token interpolation"}},[o("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[e._v("${")]),e._v("e"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("newValue"),o("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[e._v("}")])]),o("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[e._v("`")])]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),o("p",[e._v("触发事件的事件对象有几个属性：\n"),o("strong",[e._v("key")]),e._v("：键值\n"),o("strong",[e._v("oldValue")]),e._v("：修改前的值\n"),o("strong",[e._v("newValue")]),e._v("：修改后的值\n"),o("strong",[e._v("url")]),e._v("：页面url\n"),o("strong",[e._v("storageArea")]),e._v("：被修改的storage对象")]),e._v(" "),o("h2",{attrs:{id:"indexeddb"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb"}},[e._v("#")]),e._v(" indexedDB")]),e._v(" "),o("blockquote",[o("p",[e._v("这个我在这里就不码了，具体内容"),o("a",{attrs:{href:"https://github.com/amandakelake/blog/issues/13",target:"_blank",rel:"noopener noreferrer"}},[e._v("点击这里"),o("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=a.exports}}]);